<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BoardMapper">
	<resultMap id="boardMap"
		type="study.spring.simplespring.model.Board">
		<result property="BoardId" column="BoardId" />
		<result property="Title" column="Title" />
		<result property="Content" column="Content" />
		<result property="CreationDate" column="CreationDate" />
		<result property="ContentImg" column="ContentImg" />
		<result property="Category" column="Category" />
		<result property="MemberId" column="MemberId" />
		<result property="UserId" column="UserId" />
		<result property="UserName" column="UserName" />
	</resultMap>

	
	<select id="selectItem"
		parameterType="study.spring.simplespring.model.Board"
		resultMap="boardMap">
		SELECT BoardId, Title, Content,
		DATE_FORMAT(CreationDate,'%Y-%m-%d') AS CreationDate,
		ContentImg, Category, b.MemberId, u.UserId
		FROM Board b
		INNER JOIN User u ON
		b.MemberId = u.MemberId
		WHERE BoardId=#{BoardId}
	</select>

	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectListStory"
		parameterType="study.spring.simplespring.model.Board"
		resultMap="boardMap">
		SELECT BoardId, Title, Content,
		DATE_FORMAT(CreationDate,'%Y-%m-%d') AS CreationDate,
		ContentImg, Category, b.MemberId, u.UserId
		FROM Board b
		INNER JOIN User u ON
		b.MemberId = u.MemberId
		WHERE Category=1

		<choose>
			<when test="Title != null and Title != ''">
				AND Title = #{Title}
			</when>
		</choose>

		ORDER BY BoardId DESC

		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>

	<select id="selectListNotice"
		parameterType="study.spring.simplespring.model.Board"
		resultMap="boardMap">
		SELECT BoardId, Title, Content,
		DATE_FORMAT(CreationDate,'%Y-%m-%d') AS CreationDate,
		ContentImg, Category, b.MemberId, u.UserId
		FROM Board b
		INNER JOIN User u ON
		b.MemberId = u.MemberId
		WHERE Category=2

		<choose>
			<when test="Title != null and Title != ''">
				AND Title = #{Title}
			</when>
		</choose>

		ORDER BY BoardId DESC

		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>

	<select id="selectListReview"
		parameterType="study.spring.simplespring.model.Board"
		resultMap="boardMap">
		SELECT BoardId, Title, Content,
		DATE_FORMAT(CreationDate,'%Y-%m-%d') AS CreationDate,
		ContentImg, Category, b.MemberId, u.UserId
		FROM Board b
		INNER JOIN User u ON
		b.MemberId = u.MemberId
		WHERE Category=3

		<choose>
			<when test="Title != null and Title != ''">
				AND Title = #{Title}
			</when>
		</choose>

		ORDER BY BoardId DESC

		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>

	<select id="selectListQnA"
		parameterType="study.spring.simplespring.model.Board"
		resultMap="boardMap">
		SELECT BoardId, Title, Content,
		DATE_FORMAT(CreationDate,'%Y-%m-%d') AS CreationDate,
		ContentImg, Category, b.MemberId, u.UserId
		FROM Board b
		INNER JOIN User u ON
		b.MemberId = u.MemberId
		WHERE Category=4 

		<choose>
			<when test="Title != null and Title != ''">
				AND Title = #{Title}
			</when>
		</choose>

		ORDER BY BoardId DESC

		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>


	<!-- 데이터 수 조회를 위한 기능 정의 -->
	<select id="selectCountAll"
		parameterType="study.spring.simplespring.model.Board" resultType="int">
		SELECT COUNT(*)
		FROM Board b
		INNER JOIN User u ON b.MemberId=u.MemberId
		
		<choose>
			<when test="Title != null and Title != ''">
				AND Title = #{Title}
			</when>
		</choose>
	</select>
	
	<select id="selectCountAllStory"
		parameterType="study.spring.simplespring.model.Board" resultType="int">
		SELECT COUNT(*)
		FROM Board b
		INNER JOIN User u ON b.MemberId=u.MemberId
		WHERE Category=1

		<choose>
			<when test="Title != null and Title != ''">
				AND Title = #{Title}
			</when>
		</choose>
	</select>
	
	<select id="selectCountAllNotice"
		parameterType="study.spring.simplespring.model.Board" resultType="int">
		SELECT COUNT(*)
		FROM Board b
		INNER JOIN User u ON b.MemberId=u.MemberId
		WHERE Category=2

		<choose>
			<when test="Title != null and Title != ''">
				AND Title = #{Title}
			</when>
		</choose>
	</select>
	
	<select id="selectCountAllReview"
		parameterType="study.spring.simplespring.model.Board" resultType="int">
		SELECT COUNT(*)
		FROM Board b
		INNER JOIN User u ON b.MemberId=u.MemberId
		WHERE Category=3

		<choose>
			<when test="Title != null and Title != ''">
				AND Title = #{Title}
			</when>
		</choose>
	</select>
	
	<select id="selectCountAllQnA"
		parameterType="study.spring.simplespring.model.Board" resultType="int">
		SELECT COUNT(*)
		FROM Board b
		INNER JOIN User u ON b.MemberId=u.MemberId
		WHERE Category=4

		<choose>
			<when test="Title != null and Title != ''">
				AND Title = #{Title}
			</when>
		</choose>
	</select>


	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="study.spring.simplespring.model.Board"
		useGeneratedKeys="true" keyProperty="BoardId">
		INSERT INTO Board (
		Title, Content, CreationDate, ContentImg, Category, MemberId
		) VALUES (
		#{Title}, #{Content}, now(), #{ContentImg}, 3, #{MemberId}
		)
	</insert>

	<insert id="insertItemReview"
		parameterType="study.spring.simplespring.model.Board"
		useGeneratedKeys="true" keyProperty="BoardId">
		INSERT INTO Board (
		Title, Content, CreationDate, ContentImg, Category, MemberId
		) VALUES (
		#{Title}, #{Content}, now(), #{ContentImg}, 3, #{MemberId}
		)
	</insert>

	<insert id="insertItemQnA"
		parameterType="study.spring.simplespring.model.Board"
		useGeneratedKeys="true" keyProperty="BoardId">
		INSERT INTO Board (
		Title, Content, CreationDate, ContentImg, Category, MemberId
		) VALUES (
		#{Title}, #{Content}, now(), #{ContentImg}, 4, #{MemberId}
		)


	</insert>

	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
		parameterType="study.spring.simplespring.model.Board">
		DELETE FROM Board WHERE BoardId=#{BoardId}
	</delete>

	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="study.spring.simplespring.model.Board">
		UPDATE Board SET
		Title=#{Title}, Content=#{Content}, CreationDate=#{CreationDate},
		ContentImg=#{ContentImg}, Category=#{Category}, MemberId=#{MemberId}
		WHERE BoardId=#{BoardId}
	</update>

	<select id="selectList"
		parameterType="study.spring.simplespring.model.Board"
		resultMap="boardMap">
		SELECT b.*, u.UserName
		FROM connect5.board b
		inner JOIN connect5.User u ON (b.MemberId =
		u.MemberId) WHERE b.MemberId = #{MemberId};
	</select>
	
	
	<insert id="insertItem1_1"
		parameterType="study.spring.simplespring.model.Board"
		useGeneratedKeys="true" keyProperty="BoardId">
		INSERT INTO Board
		(Title,Content,CreationDate,ContentImg,Category,MemberId)
		VALUES (#{Title},#{Content},#{CreationDate},#{ContentImg},5,#{MemberId}) ;
	</insert>
	
	<select id="selectList1_1"
		parameterType="study.spring.simplespring.model.Board"
		resultMap="boardMap">
		SELECT BoardId, Title, Content,
		DATE_FORMAT(CreationDate,'%Y-%m-%d') AS CreationDate,
		ContentImg, Category, u.UserName
		FROM connect5.board b
		inner JOIN connect5.User u ON (b.MemberId =
		u.MemberId) WHERE b.MemberId = #{MemberId} AND Category=5

		ORDER BY BoardId DESC

		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>

	<select id="selectItem1_1"
		parameterType="study.spring.simplespring.model.Board"
		resultMap="boardMap">
		SELECT BoardId, Title, Content,
		DATE_FORMAT(CreationDate,'%Y-%m-%d') AS CreationDate,
		ContentImg, Category
		FROM connect5.board
		WHERE BoardId=#{BoardId} AND Category = 5;
	</select>

	<update id="updateItem1_1"
		parameterType="study.spring.simplespring.model.Board">
		UPDATE Board SET
		Title = #{Title},
		Content=#{Content},CreationDate=#{CreationDate},ContentImg=#{ContentImg}, MemberId=#{MemberId},Category = 5
		WHERE BoardId=#{BoardId}
	</update>
	
	<insert id="insertItemadminNotice"
		parameterType="study.spring.simplespring.model.Board"
		useGeneratedKeys="true" keyProperty="BoardId">
		INSERT INTO Board
		(Title,Content,CreationDate,ContentImg,Category,MemberId)
		VALUES (#{Title},#{Content},#{CreationDate},#{ContentImg},2,#{MemberId}) ;
	</insert>
	
	<select id="selectItemadminNotice"
		parameterType="study.spring.simplespring.model.Board"
		resultMap="boardMap">
		SELECT BoardId, Title, Content,
		DATE_FORMAT(CreationDate,'%Y-%m-%d') AS CreationDate,
		ContentImg, Category
		FROM connect5.board
		WHERE BoardId=#{BoardId} AND Category = 2;
	</select>
	
	<update id="updateItemadminNotice"
		parameterType="study.spring.simplespring.model.Board">
		UPDATE Board SET
		Title = #{Title},
		Content=#{Content},CreationDate=#{CreationDate},ContentImg=#{ContentImg}, MemberId=#{MemberId},Category = 2
		WHERE BoardId=#{BoardId}
	</update>
	
	<delete id="deleteItemadminNotice"
        parameterType="study.spring.simplespring.model.Board">
        DELETE FROM Board WHERE BoardId=#{BoardId};
    </delete>
    
    <select id="selectListadminNotice"
		parameterType="study.spring.simplespring.model.Board"
		resultMap="boardMap">
		SELECT BoardId, Title, Content,
		DATE_FORMAT(CreationDate,'%Y-%m-%d') AS CreationDate,
		ContentImg, Category, b.MemberId, u.UserId, u.UserName
		FROM Board b
		INNER JOIN User u ON
		b.MemberId = u.MemberId
		WHERE Category = 2
		
		<choose>
			<when test="Title != null and Title != ''">
				AND Title = #{Title}
			</when>
		</choose>

		ORDER BY BoardId DESC

		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount} 
		</if>
	</select>
	
	<select id="selectListadmin1_1"
		parameterType="study.spring.simplespring.model.Board"
		resultMap="boardMap">
		SELECT BoardId, Title, Content,
		DATE_FORMAT(CreationDate,'%Y-%m-%d') AS CreationDate,
		ContentImg, Category, u.isadmin,u.UserName
		FROM connect5.board b
		iNNER JOIN connect5.User u ON u.MemberId = b.MemberId AND Category=5 AND u.isadmin != 1
	
		<choose>
			<when test="Title != null and Title != ''">
				AND Title LIKE concat('%', #{Title}, '%')
			</when>
			
			<when test="UserName != null and UserName != ''">
				AND UserName LIKE concat('%', #{UserName}, '%')
			</when>
		</choose>
		
		ORDER BY CreationDate DESC
		
		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>
	
	<select id="selectItemadmin1_1"
		parameterType="study.spring.simplespring.model.Board"
		resultMap="boardMap">
		SELECT BoardId, Title, Content,
		DATE_FORMAT(CreationDate,'%Y-%m-%d') AS CreationDate,
		ContentImg, Category , u.UserName
		FROM connect5.board b
		INNER JOIN connect5.user u ON b.MemberId = u.MemberId AND BoardId = #{BoardId} AND Category = 5
	</select>
	
</mapper>